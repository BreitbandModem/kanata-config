;; Home row mods QWERTY example with more complexity.
;; Some of the changes from the basic example:
;; - when a home row mod activates tap, the home row mods are disabled
;;   while continuing to type rapidly
;; - tap-hold-release helps make the hold action more responsive
;; - pressing another key on the same half of the keyboard
;;   as the home row mod will activate an early tap action
(defcfg
  process-unmapped-keys yes
)
(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 200
  hold-time 150

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(defsrc
       1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]
  caps a    s    d    f    g    h    j    k    l    ;    '    \    ret
  lsft grv  z    x    c    v    b    n    m    ,    .    /         rsft
  lctl lalt lmet           spc            rmet      ralt
)

(deflayer base
       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   del
  tab  q    w    e    r    t    y    u    i    o    p    XX   XX
  esc  @a   @s   @d   @f   g    h    @j   @k   @l   @;   '    XX   XX
  XX   \    z    x    c    v    b    n    m    ,    .    /         XX
  XX   XX   @rsBspc        @lwr           @rsRet    XX
)

(deflayer lower
       _    _    _    _    _    _    _    _    _    _    _    _    _
  _    S-1  S-2  S-3  S-4  S-5  S-6  S-7  S-8  -    =    _    _
  grv  @1   @2   @3   @4   5    6    @7   @8   @9   @0   _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    bspc           spc            ret       _
)

(deflayer raise
       _    _    _    _    _    _    _    _    _    _    _    _    _
  _    f1   f2   f3   f4   f5   f6   S-9  S-0  f9   f10  f11  f12
  _    _    _    _    _    _    _    [    ]    _    _    _    _    ret
  _    _    _    _    _    _    _    S-[  S-]  _    _    _         rsft
  _    _    bspc           spc            ret       _
)

(defalias
  lwr    (tap-hold $tap-time $hold-time spc  (layer-toggle lower))
  rsRet  (tap-hold $tap-time $hold-time ret  (layer-toggle raise))
  rsBspc (tap-hold $tap-time $hold-time bspc (layer-toggle raise))

  a (tap-hold-release-keys $tap-time $hold-time a lctl $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time s lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time d lmet $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time f lsft $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time j rsft $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time k rmet $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time l ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time ; rctl $right-hand-keys)

  1 (tap-hold-release-keys $tap-time $hold-time 1 lctl $left-hand-keys)
  2 (tap-hold-release-keys $tap-time $hold-time 2 lalt $left-hand-keys)
  3 (tap-hold-release-keys $tap-time $hold-time 3 lmet $left-hand-keys)
  4 (tap-hold-release-keys $tap-time $hold-time 4 lsft $left-hand-keys)
  7 (tap-hold-release-keys $tap-time $hold-time 7 rsft $right-hand-keys)
  8 (tap-hold-release-keys $tap-time $hold-time 8 rmet $right-hand-keys)
  9 (tap-hold-release-keys $tap-time $hold-time 9 ralt $right-hand-keys)
  0 (tap-hold-release-keys $tap-time $hold-time 0 rctl $right-hand-keys)
)
