(defcfg
  process-unmapped-keys yes
)

;; Note: consider using different time values for your different fingers.
;; For example, your pinkies might be slower to release keys and index
;; fingers faster.
(deftemplate homerow-l (tap-action hold-action)
  ;;                tap-time hold-time                    tap-keys
  (tap-hold-release-keys 200 150 $tap-action $hold-action (
      q w e r t
      a s d f g
      z x c v b
    )
  )
)
(deftemplate homerow-r (tap-action hold-action)
  ;;                tap-time hold-time                    tap-keys
  (tap-hold-release-keys 200 150 $tap-action $hold-action (
      y u i o p
      h j k l ;
      n m , . /
    )
  )
)
(deftemplate tap-hold (tap-action hold-action)
  ;;   tap-time hold-time
  (tap-hold 200 150 $tap-action $hold-action)
)
(deftemplate tap-layer (tap-action layer)
  ;;   tap-time hold-time
  (tap-hold 200 150 $tap-action (layer-while-held $layer))
)

(defvar)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
       1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]
  caps a    s    d    f    g    h    j    k    l    ;    '    \    ret
  lsft grv  z    x    c    v    b    n    m    ,    .    /         rsft
  fn   lctl lalt lmet           spc            rmet      ralt
)

(deflayer base
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
       XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   del
  tab  q    w    e    r    t    y    @u   i    @o   p    XX   XX
  @v-esc @a   @s   @d   @f   g    h    @j   @k   @l   @;   '    XX   XX
  XX   \    z    x    c    v    b    n    m    ,    .    /         XX
  @fn  XX   XX   @rsBspc        @lwr           @rsRet    XX
)

(deflayer lower
  _    _    _    _    _    _    _    _    _    _    _    _    _
       _    _    _    _    _    _    _    _    _    _    _    _    _
  _    S-1  S-2  S-3  S-4  S-5  S-6  S-7  S-8  -    =    _    _
  grv  @1   @2   @3   @4   5    6    @7   @8   @9   @0   _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    bspc           spc            ret       _
)

(deflayer raise
  _    _    _    _    _    _    _    _    _    _    _    _    _
       _    _    _    _    _    _    _    _    _    _    _    _    _
  _    f1   f2   f3   f4   f5   f6   S-9  S-0  f9   f10  f11  f12
  _    @ae  _    _    _    _    _    @[   @]   _    _    _    _    ret
  _    _    _    _    _    _    _    S-[  S-]  _    _    _         rsft
  _    _    _    bspc           spc            ret       _
)

(deflayermap (fn-layer)
  f1  brdown
  f2  brup
  f11 voldwn
  f12 volu
)

(deflayermap (vim-normal)
  caps (multi caps (layer-switch base)) ;; cancel vim layer

  up up
  down down
  lft lft
  rght rght
  h lft
  j @v-j
  k up
  l rght
  f (t! tap-hold XX lsft)

  ;; vim motions
  ;; todo: add motions 0,$
  ;; todo: add yank operations
  ;; todo: add d,dd,x
  i (fork (multi caps @v-i) @v-I (lsft))
  a (fork (multi caps @v-i) @v-A (rsft))
  o (fork @v-o @v-O (lsft))
  b  @v-b
  w  @v-w
  g (tap-dance 200 ((fork XX @v-G (rsft)) @v-gg))
  c (fork (one-shot-press 300 (layer-toggle vim-c)) @v-C (rsft))
  v (layer-switch vim-visual)

  ___ XX ;; ignore all other keys
)
(deflayermap (vim-c)
  c @v-cc
  i (one-shot-press 300 (layer-toggle vim-ci))
  ___ XX ;; ignore all other keys
)
(deflayermap (vim-ci)
  w @v-ciw
  ___ XX ;; ignore all other keys
)
(deflayermap (vim-visual)
  caps (multi (layer-switch vim-normal) rght) ;; back to normal mode and deselect text
  b (multi lsft @v-b)
  w (multi lsft @v-w)
  ___ XX ;; ignore all other keys
)

(defalias
  ;; vim
  v-esc (tap-dance 200 (esc (multi caps (layer-switch vim-normal))))
  v-i   (layer-switch base)
  v-j   (t! homerow-r down lsft)
  v-b   A-lft
  v-w   A-rght
  v-I   (multi (unshift lctl a) caps @v-i)
  v-A   (multi (unshift lctl e) caps @v-i)
  v-o   (multi (macro M-rght ret) caps @v-i)
  v-O   (multi (macro (unshift lmet lft) ret (unshift up)) caps @v-i)
  v-gg  M-up
  v-G   (unshift lmet down)
  v-cc  (multi (macro M-lft C-k caps) @v-i)
  v-C   (multi (unshift lctl k) caps @v-i)
  v-ciw (multi (macro S-A-lft bspc S-A-rght bspc) caps @v-i)

  ;; layer changes
  lwr    (t! tap-layer spc  lower)
  rsRet  (t! tap-layer ret  raise)
  rsBspc (t! tap-layer bspc raise)
  fn     (t! tap-layer fn   fn-layer)

  ;; homerow mods
  a (t! homerow-l a lalt)
  s (t! homerow-l s lalt)
  d (t! homerow-l d lmet)
  f (t! homerow-l f lsft)
  j (t! homerow-r j rsft)
  k (t! homerow-r k rmet)
  l (t! homerow-r l ralt)
  ; (t! homerow-r ; rctl)

  1 (t! tap-hold 1 lctl)
  2 (t! tap-hold 2 lalt)
  3 (t! tap-hold 3 lmet)
  4 (t! tap-hold 4 lsft)
  7 (t! tap-hold 7 rsft)
  8 (t! tap-hold 8 rmet)
  9 (t! tap-hold 9 ralt)
  0 (t! tap-hold 0 rctl)

  [ (t! tap-hold [ rsft)
  ] (t! tap-hold ] rmet)

  ;; Umlauts
  umlaut (unshift lalt u) ;; when used in a macro, wait for 1ms before pressing the vocal
  u (tap-hold 200 300 u (macro @umlaut 1 u))
  o (tap-hold 200 300 o (macro @umlaut 1 o))
  ae (macro @umlaut 1 a)
)
